// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package smartarbitrage.api.interface.internal

sealed trait OrderStatusType extends _root_.scalapb.GeneratedEnum {
  type EnumType = OrderStatusType
  def isOstPendingNew: _root_.scala.Boolean = false
  def isOstNew: _root_.scala.Boolean = false
  def isOstPartiallyFilled: _root_.scala.Boolean = false
  def isOstFilled: _root_.scala.Boolean = false
  def isOstPendingCancel: _root_.scala.Boolean = false
  def isOstPartiallyCanceled: _root_.scala.Boolean = false
  def isOstCanceled: _root_.scala.Boolean = false
  def isOstPendingReplace: _root_.scala.Boolean = false
  def isOstReplaced: _root_.scala.Boolean = false
  def isOstStopped: _root_.scala.Boolean = false
  def isOstRejected: _root_.scala.Boolean = false
  def isOstExpired: _root_.scala.Boolean = false
  def isOstUnknown: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[OrderStatusType] = smartarbitrage.api.interface.internal.OrderStatusType
}

object OrderStatusType extends _root_.scalapb.GeneratedEnumCompanion[OrderStatusType] {
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[OrderStatusType] = this
  @SerialVersionUID(0L)
  case object OST_PENDING_NEW extends OrderStatusType {
    val value = 0
    val index = 0
    val name = "OST_PENDING_NEW"
    override def isOstPendingNew: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_NEW extends OrderStatusType {
    val value = 1
    val index = 1
    val name = "OST_NEW"
    override def isOstNew: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_PARTIALLY_FILLED extends OrderStatusType {
    val value = 2
    val index = 2
    val name = "OST_PARTIALLY_FILLED"
    override def isOstPartiallyFilled: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_FILLED extends OrderStatusType {
    val value = 3
    val index = 3
    val name = "OST_FILLED"
    override def isOstFilled: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_PENDING_CANCEL extends OrderStatusType {
    val value = 4
    val index = 4
    val name = "OST_PENDING_CANCEL"
    override def isOstPendingCancel: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_PARTIALLY_CANCELED extends OrderStatusType {
    val value = 5
    val index = 5
    val name = "OST_PARTIALLY_CANCELED"
    override def isOstPartiallyCanceled: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_CANCELED extends OrderStatusType {
    val value = 6
    val index = 6
    val name = "OST_CANCELED"
    override def isOstCanceled: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_PENDING_REPLACE extends OrderStatusType {
    val value = 7
    val index = 7
    val name = "OST_PENDING_REPLACE"
    override def isOstPendingReplace: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_REPLACED extends OrderStatusType {
    val value = 8
    val index = 8
    val name = "OST_REPLACED"
    override def isOstReplaced: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_STOPPED extends OrderStatusType {
    val value = 9
    val index = 9
    val name = "OST_STOPPED"
    override def isOstStopped: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_REJECTED extends OrderStatusType {
    val value = 10
    val index = 10
    val name = "OST_REJECTED"
    override def isOstRejected: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_EXPIRED extends OrderStatusType {
    val value = 11
    val index = 11
    val name = "OST_EXPIRED"
    override def isOstExpired: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OST_UNKNOWN extends OrderStatusType {
    val value = 12
    val index = 12
    val name = "OST_UNKNOWN"
    override def isOstUnknown: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(value: _root_.scala.Int) extends OrderStatusType with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.immutable.Seq(OST_PENDING_NEW, OST_NEW, OST_PARTIALLY_FILLED, OST_FILLED, OST_PENDING_CANCEL, OST_PARTIALLY_CANCELED, OST_CANCELED, OST_PENDING_REPLACE, OST_REPLACED, OST_STOPPED, OST_REJECTED, OST_EXPIRED, OST_UNKNOWN)
  def fromValue(value: _root_.scala.Int): OrderStatusType = value match {
    case 0 => OST_PENDING_NEW
    case 1 => OST_NEW
    case 2 => OST_PARTIALLY_FILLED
    case 3 => OST_FILLED
    case 4 => OST_PENDING_CANCEL
    case 5 => OST_PARTIALLY_CANCELED
    case 6 => OST_CANCELED
    case 7 => OST_PENDING_REPLACE
    case 8 => OST_REPLACED
    case 9 => OST_STOPPED
    case 10 => OST_REJECTED
    case 11 => OST_EXPIRED
    case 12 => OST_UNKNOWN
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = CommonsProto.javaDescriptor.getEnumTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = CommonsProto.scalaDescriptor.enums(1)
}